{"version":3,"file":"mouseNeon.min.js","sources":["../src/mouseNeon.js"],"sourcesContent":["// mouseNeon.js – Wraithveil Neon Mouse Trail & Orb Effect (Vanilla JS)\r\n// (24 particles, immediate trail clear, faster return)\r\n\r\n(function(global) {\r\n  // —————————————————————————————————————\r\n  // CORE STATE & CONSTANTS\r\n  // —————————————————————————————————————\r\n  let canvas, ctx, animationId;\r\n  let mouseTrail = [], orbParticles = [];\r\n  let lastMoveTime = 0;\r\n  const ORB_PARTICLE_COUNT = 24;\r\n\r\n  let mouseOrb = {\r\n    x: -1000, y: -1000,\r\n    px: -1000, py: -1000,\r\n    exploded: false, explodeTime: 0,\r\n    grow: 1, squash: 0, squashTimer: 0, squashActive: false,\r\n    bounce: 0, bounceTime: 0,\r\n    reassembleTimestamps: [], reassembledParticles: 0,\r\n    afterglow: 0, afterglowTime: 0\r\n  };\r\n\r\n  // —————————————————————————————————————\r\n  // UTILITY FUNCTIONS\r\n  // —————————————————————————————————————\r\n  function getParticleGradientColor(lifeProgress) {\r\n    const hue = 24 + (240 - 24) * lifeProgress;\r\n    const sat = 92 - 12 * lifeProgress;\r\n    const lum = 54 + 18 * lifeProgress;\r\n    return `hsl(${hue},${sat}%,${lum}%)`;\r\n  }\r\n\r\n  function easeOutQuint(x) {\r\n    return 1 - Math.pow(1 - x, 5);\r\n  }\r\n\r\n  function resizeCanvas() {\r\n    if (!canvas) return;\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n  }\r\n\r\n  // —————————————————————————————————————\r\n  // DRAW: NEON MOUSE TRAIL\r\n  // —————————————————————————————————————\r\n  function drawNeonMouseTrail(ctx, mouseTrail, now, brighten = 0, afterglow = 0) {\r\n    if (mouseTrail.length < 2) return;\r\n    ctx.save();\r\n    for (let i = 1; i < mouseTrail.length; i++) {\r\n      const pt1 = mouseTrail[i - 1];\r\n      const pt2 = mouseTrail[i];\r\n      const age = Math.max(0, Math.min(1, (now - pt2.t) / 200));\r\n      const width = 6 * (1 - age) + 1.5 * age + 3 * afterglow;\r\n      const baseAlpha = 0.36 * (1 - age) + 0.10 * age + 0.22 * afterglow;\r\n      const hue = pt2.hue + afterglow * 90 * (1 - age);\r\n      const earlyHot = Math.max(0, 0.6 - age * 1.15);\r\n      const alpha = baseAlpha + (brighten * 0.32 + earlyHot * 0.55) * (1 - age);\r\n      const shadowAlpha = 0.85 * baseAlpha\r\n        + (brighten * 0.35 + earlyHot * 0.38) * (1 - age)\r\n        + 0.26 * afterglow;\r\n      ctx.strokeStyle = `hsla(${hue},100%,78%,${alpha})`;\r\n      ctx.shadowColor = `hsla(${hue + 25 * afterglow},100%,92%,${shadowAlpha})`;\r\n      ctx.shadowBlur = 14 + 28 * (brighten + earlyHot + afterglow * 1.2);\r\n      ctx.lineWidth = width;\r\n      ctx.beginPath();\r\n      ctx.moveTo(pt1.x, pt1.y);\r\n      ctx.lineTo(pt2.x, pt2.y);\r\n      ctx.stroke();\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  // —————————————————————————————————————\r\n  // DRAW: PARTICLE TRAIL\r\n  // —————————————————————————————————————\r\n  function drawParticleTrail(ctx, p, afterglow = 0) {\r\n    if (p.trail && p.trail.length > 1) {\r\n      for (let j = 1; j < p.trail.length; j++) {\r\n        const prev = p.trail[j - 1];\r\n        const curr = p.trail[j];\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.moveTo(prev.x, prev.y);\r\n        ctx.lineTo(curr.x, curr.y);\r\n        const age = j / p.trail.length;\r\n        const alpha = 0.15 * age + 0.19 * afterglow * (1 - age);\r\n        ctx.strokeStyle = `hsla(${p.hue},100%,85%,${alpha})`;\r\n        ctx.shadowColor = `hsla(${p.hue},100%,100%,${alpha * 0.4 + 0.3 * afterglow})`;\r\n        ctx.shadowBlur = 4 + 11 * afterglow;\r\n        ctx.lineWidth = 0.8 + 2 * (1 - age) + 1.1 * afterglow;\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      }\r\n    }\r\n  }\r\n\r\n  function getOrbGlowFactor() {\r\n    const fraction = mouseOrb.reassembledParticles / ORB_PARTICLE_COUNT;\r\n    let bounce = 0;\r\n    if (mouseOrb.bounce > 0 && mouseOrb.bounceTime) {\r\n      const now = performance.now();\r\n      const bounceElapsed = now - mouseOrb.bounceTime;\r\n      if (bounceElapsed < 500) {\r\n        bounce = 0.35 * Math.sin(Math.PI * (bounceElapsed / 500));\r\n      }\r\n    }\r\n    const afterglow = mouseOrb.afterglow;\r\n    return Math.max(fraction, bounce, afterglow);\r\n  }\r\n\r\n  // —————————————————————————————————————\r\n  // CLEAR STALE TRAIL POINTS\r\n  // —————————————————————————————————————\r\n  function cleanMouseTrail(now) {\r\n    // If no movement in past 50 ms → clear entirely\r\n    if (now - lastMoveTime > 50) {\r\n      mouseTrail = [];\r\n      return;\r\n    }\r\n    // Otherwise remove points older than 200 ms\r\n    while (mouseTrail.length > 0 && (now - mouseTrail[0].t) > 200) {\r\n      mouseTrail.shift();\r\n    }\r\n  }\r\n  // —————————————————————————————————————\r\n  // MAIN ANIMATION LOOP\r\n  // —————————————————————————————————————\r\n  function animate() {\r\n    // 1) Clear canvas and set composite for glowing effect\r\n    ctx.globalCompositeOperation = 'source-over';\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.globalCompositeOperation = 'lighter';\r\n\r\n    const now = performance.now();\r\n\r\n      let reassembledCount = 0;\r\n\r\n    // 2) Compute afterglow for orb reassembly\r\n    let afterglow = 0;\r\n    if (mouseOrb.afterglowTime > 0) {\r\n      const t = (now - mouseOrb.afterglowTime) / 1500;\r\n      if (t < 1) {\r\n        afterglow = easeOutQuint(1 - t);\r\n      } else {\r\n        mouseOrb.afterglowTime = 0;\r\n      }\r\n    }\r\n\r\n    // 3) Brighten trail if some particles have reassembled\r\n    let brightenTrail = 0;\r\n    if (mouseOrb.reassembledParticles > 0) {\r\n      brightenTrail = mouseOrb.reassembledParticles / ORB_PARTICLE_COUNT;\r\n    }\r\n\r\n    // 4) Draw neon mouse trail (and clear if no recent movement)\r\n    cleanMouseTrail(now);\r\n    drawNeonMouseTrail(ctx, mouseTrail, now, brightenTrail, afterglow);\r\n\r\n    // 5) Handle explosion → return for each particle\r\n    if (mouseOrb.exploded && orbParticles.length) {\r\n      for (let i = orbParticles.length - 1; i >= 0; i--) {\r\n        const p = orbParticles[i];\r\n        p.trail = p.trail || [];\r\n        p.trail.push({ x: p.x, y: p.y });\r\n        if (p.trail.length > 25) p.trail.shift();\r\n\r\n        if (typeof p.reentryDelay === 'undefined') {\r\n          p.reentryDelay = 440 + i * 56 + Math.random() * 140;\r\n        }\r\n\r\n        const particleExplodeElapsed = now - mouseOrb.explodeTime;\r\n        const lifeRatio = Math.max(0, 1 - (particleExplodeElapsed / 1700));\r\n        const swirlElapsed = Math.max(0, particleExplodeElapsed - 500);\r\n        const lifeProgress = Math.min(\r\n          1,\r\n          Math.max(\r\n            0,\r\n            (particleExplodeElapsed - p.reentryDelay + 260) /\r\n              (1700 - p.reentryDelay + 260)\r\n          )\r\n        );\r\n\r\n        if (particleExplodeElapsed < p.reentryDelay) {\r\n          // ─── EXPLOSION PHASE ───\r\n          p.x += p.vx * 0.98;\r\n          p.y += p.vy * 0.98;\r\n          p.vx *= 0.96;\r\n          p.vy *= 0.96;\r\n        } else {\r\n          // ─── RETURN PHASE ───\r\n\r\n          // 1) Time since return started\r\n          const returnStart = mouseOrb.explodeTime + p.reentryDelay;\r\n          const timeSinceReturn = Math.max(0, now - returnStart);\r\n\r\n          // 2) Vector toward orb center\r\n          const dx = mouseOrb.x - p.x;\r\n          const dy = mouseOrb.y - p.y;\r\n          const dist = Math.sqrt(dx * dx + dy * dy) + 0.1;\r\n\r\n          // 3) Swirl component\r\n          const swirlStrength = 0.52 * Math.exp(\r\n            - (particleExplodeElapsed - p.reentryDelay) / 400\r\n          );\r\n          const swirlAngle = Math.atan2(dy, dx) + Math.PI / 2;\r\n          const swirlVx = Math.cos(swirlAngle) * swirlStrength * (0.93 + 0.17 * Math.random());\r\n          const swirlVy = Math.sin(swirlAngle) * swirlStrength * (0.93 + 0.17 * Math.random());\r\n\r\n          // 4) Base force toward center\r\n          const baseForce = 0.44;\r\n          const ax = (dx / dist) * baseForce\r\n                    + swirlVx\r\n                    + (Math.random() - 0.5) * 0.12;\r\n          const ay = (dy / dist) * baseForce\r\n                    + swirlVy\r\n                    + (Math.random() - 0.5) * 0.12;\r\n\r\n          // 5) lifeProgress ∈ [0,1]\r\n          //    (already computed above)\r\n\r\n          // 6) Ramp multiplier: 3 → 5 as lifeProgress → 1\r\n          const BASE_MULTIPLIER = 3.0;\r\n          const speedRamp = BASE_MULTIPLIER + (lifeProgress * 2);\r\n\r\n          // 7) timeBoost: 1 → 1.5 over first 400 ms\r\n          const timeBoost = 1 + Math.min(timeSinceReturn / 400, 0.5);\r\n\r\n          // 8) Apply acceleration\r\n          p.vx += ax * speedRamp * timeBoost;\r\n          p.vy += ay * speedRamp * timeBoost;\r\n\r\n          // 9) Damping\r\n          p.vx *= 0.88;\r\n          p.vy *= 0.88;\r\n\r\n          // 10) Update position\r\n          p.x += p.vx;\r\n          p.y += p.vy;\r\n\r\n          // 11) Reassemble if close enough\r\n          if (dist < 8) {\r\n            orbParticles.splice(i, 1);\r\n            mouseOrb.reassembleTimestamps.push(now);\r\n            mouseOrb.reassembledParticles++;\r\n            mouseOrb.squashActive = true;\r\n            mouseOrb.squashTimer = now;\r\n            p.justReassembled = true;\r\n            continue;\r\n          }\r\n        }\r\n\r\n        // ─── DRAW PARTICLE + ITS TRAIL ───\r\n        drawParticleTrail(ctx, p, afterglow);\r\n        ctx.save();\r\n        ctx.beginPath();\r\n\r\n        const baseR = 2.2 + 2.3 * afterglow;\r\n        let flash = 0;\r\n        const dx2 = mouseOrb.x - p.x;\r\n        const dy2 = mouseOrb.y - p.y;\r\n        const dist2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\r\n        const gradColor = getParticleGradientColor(lifeProgress);\r\n\r\n        if (particleExplodeElapsed < p.reentryDelay + 260) {\r\n          flash = 1 - (particleExplodeElapsed - p.reentryDelay) / 260;\r\n        }\r\n        if (p.justReassembled && dist2 < 15) {\r\n          flash = 1;\r\n          setTimeout(() => { p.justReassembled = false; }, 80);\r\n        }\r\n        if (dist2 < 26) {\r\n          flash += (1 - dist2 / 26) * 0.5;\r\n        }\r\n        if (flash > 1) flash = 1;\r\n\r\n        const radius = baseR * (0.75 * lifeRatio + 0.49 * flash);\r\n        ctx.arc(p.x, p.y, Math.max(0.69, radius), 0, 2 * Math.PI);\r\n        ctx.fillStyle = gradColor;\r\n        ctx.shadowColor = gradColor;\r\n        ctx.shadowBlur = 21 * (0.19 + flash + afterglow * 0.7);\r\n        ctx.globalAlpha = 0.75 + 0.49 * flash + 0.17 * afterglow;\r\n        ctx.fill();\r\n        ctx.restore();\r\n      }\r\n\r\n      // After looping, update reassembly & orb growth\r\n      reassembledCount = mouseOrb.reassembleTimestamps.length;\r\n      if (reassembledCount > ORB_PARTICLE_COUNT) {\r\n        mouseOrb.reassembleTimestamps = mouseOrb.reassembleTimestamps.slice(-ORB_PARTICLE_COUNT);\r\n      }\r\n      if (reassembledCount > 0) {\r\n        const minT = mouseOrb.reassembleTimestamps[0];\r\n        const elapsedSinceFirst = now - minT;\r\n        const particleFraction = reassembledCount / ORB_PARTICLE_COUNT;\r\n        const linger = Math.max(0, 1.15 - elapsedSinceFirst / 4300);\r\n        const growTarget = 1 + 0.48 * easeOutQuint(particleFraction) * linger;\r\n        if (mouseOrb.grow < growTarget) mouseOrb.grow += 0.006;\r\n        else if (mouseOrb.grow > growTarget) mouseOrb.grow -= 0.0045;\r\n      }\r\n      if (!orbParticles.length) {\r\n        mouseOrb.exploded = false;\r\n        mouseOrb.bounce = 1;\r\n        mouseOrb.bounceTime = performance.now();\r\n        mouseOrb.afterglow = 1;\r\n        mouseOrb.afterglowTime = performance.now();\r\n        mouseOrb.squashActive = false;\r\n        mouseOrb.squash = 0;\r\n        mouseOrb.reassembleTimestamps = [];\r\n        mouseOrb.reassembledParticles = 0;\r\n      }\r\n    }\r\n\r\n    // 6) Handle orb squash & bounce\r\n    if (mouseOrb.squashActive && mouseOrb.reassembledParticles > 0) {\r\n      const squashProgress = Math.min(1, mouseOrb.reassembledParticles / ORB_PARTICLE_COUNT);\r\n      mouseOrb.squash = 0.98 * Math.exp(-0.16 * squashProgress) * (1 - 0.41 * squashProgress);\r\n    } else if (!mouseOrb.exploded) {\r\n      mouseOrb.squash = 0;\r\n      mouseOrb.squashTimer = 0;\r\n      mouseOrb.squashActive = false;\r\n      mouseOrb.reassembledParticles = 0;\r\n    }\r\n\r\n    // 7) Draw the orb at mouse location\r\n    const orbHue = (now / 6) % 360;\r\n    ctx.save();\r\n    let squash = 1;\r\n    const growVal = mouseOrb.grow || 1;\r\n    const glowVal = getOrbGlowFactor();\r\n    let bounce = 0;\r\n    if (mouseOrb.bounce > 0 && mouseOrb.bounceTime) {\r\n      const bounceElapsed = now - mouseOrb.bounceTime;\r\n      if (bounceElapsed < 500) {\r\n        bounce = 0.33 * Math.sin(Math.PI * (bounceElapsed / 500));\r\n      } else {\r\n        mouseOrb.bounce = 0;\r\n        mouseOrb.bounceTime = 0;\r\n      }\r\n    }\r\n    if (mouseOrb.squash > 0.01) {\r\n      squash = 1 - 0.35 * mouseOrb.squash;\r\n    }\r\n    squash *= (1 + bounce + 0.08 * afterglow);\r\n    const maxR = 14, minR = 2;\r\n    const outerR = (minR + (maxR - minR) * growVal) * squash;\r\n    const innerR = (0.4 * minR + (6 - 0.4 * minR) * growVal) * squash;\r\n    if ((!mouseOrb.exploded || afterglow > 0.01) && mouseOrb.x >= 0 && mouseOrb.y >= 0) {\r\n      ctx.beginPath();\r\n      ctx.arc(mouseOrb.x, mouseOrb.y, outerR, 0, 2 * Math.PI);\r\n      ctx.fillStyle = `hsla(${orbHue},100%,70%,${0.21 + 0.41 * (glowVal + afterglow * 1.2)})`;\r\n      ctx.shadowColor = `hsla(${orbHue},100%,82%,${0.99 * (glowVal + afterglow * 1.15)})`;\r\n      ctx.shadowBlur = 36 * growVal * (1 + glowVal * 1.7 + afterglow * 1.13);\r\n      ctx.fill();\r\n      ctx.beginPath();\r\n      ctx.arc(mouseOrb.x, mouseOrb.y, innerR, 0, 2 * Math.PI);\r\n      ctx.fillStyle = `hsla(${orbHue},100%,99%,${0.63 + 0.37 * (glowVal + afterglow)})`;\r\n      ctx.shadowBlur = 9 * growVal * (1 + glowVal * 1.7 + afterglow * 1.25);\r\n      ctx.fill();\r\n    }\r\n    ctx.restore();\r\n\r\n    if (!mouseOrb.bounce && !mouseOrb.squash && mouseOrb.grow > 1) mouseOrb.grow -= 0.012;\r\n    if (mouseOrb.grow < 1) mouseOrb.grow = 1;\r\n\r\n    // 8) Loop\r\n    ctx.globalCompositeOperation = 'source-over';\r\n    animationId = requestAnimationFrame(animate);\r\n  }\r\n\r\n  // —————————————————————————————————————\r\n  // EVENT LISTENERS & HANDLERS\r\n  // —————————————————————————————————————\r\n  function addListeners() {\r\n    window.addEventListener('resize', resizeCanvas);\r\n    window.addEventListener('mousemove', mousemoveHandler);\r\n    window.addEventListener('mouseleave', mouseleaveHandler);\r\n    window.addEventListener('mouseenter', mouseenterHandler);\r\n    window.addEventListener('click', clickHandler);\r\n  }\r\n\r\n  function removeListeners() {\r\n    window.removeEventListener('resize', resizeCanvas);\r\n    window.removeEventListener('mousemove', mousemoveHandler);\r\n    window.removeEventListener('mouseleave', mouseleaveHandler);\r\n    window.removeEventListener('mouseenter', mouseenterHandler);\r\n    window.removeEventListener('click', clickHandler);\r\n  }\r\n\r\n  function mousemoveHandler(e) {\r\n    const now = performance.now();\r\n    const hue = (now / 10) % 360;\r\n    mouseTrail.push({ x: e.clientX, y: e.clientY, hue, t: now });\r\n    mouseOrb.x = e.clientX;\r\n    mouseOrb.y = e.clientY;\r\n    lastMoveTime = now;\r\n    cleanMouseTrail(now);\r\n  }\r\n\r\n  function mouseleaveHandler() {\r\n    mouseTrail = [];\r\n    mouseOrb.x = -1000;\r\n    mouseOrb.y = -1000;\r\n  }\r\n\r\n  function mouseenterHandler(e) {\r\n    mouseOrb.x = e.clientX;\r\n    mouseOrb.y = e.clientY;\r\n    lastMoveTime = performance.now();\r\n  }\r\n\r\n  function clickHandler(e) {\r\n    mouseOrb.px = e.clientX;\r\n    mouseOrb.py = e.clientY;\r\n    mouseOrb.exploded = true;\r\n    mouseOrb.explodeTime = performance.now();\r\n    mouseOrb.grow = 1;\r\n    mouseOrb.squash = 0;\r\n    mouseOrb.squashActive = false;\r\n    mouseOrb.squashTimer = 0;\r\n    mouseOrb.reassembleTimestamps = [];\r\n    mouseOrb.reassembledParticles = 0;\r\n    mouseOrb.bounce = 0;\r\n    mouseOrb.bounceTime = 0;\r\n    mouseOrb.afterglow = 0;\r\n    mouseOrb.afterglowTime = 0;\r\n    orbParticles = [];\r\n    const orbHue = ((performance.now() / 6) % 360) | 0;\r\n    for (let i = 0; i < ORB_PARTICLE_COUNT; i++) {\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const speed = 5 + Math.random() * 5;\r\n      const hue = orbHue + Math.random() * 100 - 50;\r\n      orbParticles.push({\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n        vx: Math.cos(angle) * speed,\r\n        vy: Math.sin(angle) * speed,\r\n        hue,\r\n        trail: [],\r\n        reentryDelay: undefined,\r\n        justReassembled: false\r\n      });\r\n    }\r\n    // Clear any lingering trail\r\n    mouseTrail = [];\r\n  }\r\n\r\n  // —————————————————————————————————————\r\n  // INITIALIZE / DESTROY\r\n  // —————————————————————————————————————\r\n  function initNeonMouseEffect(options = {}) {\r\n    if (canvas) return; // already running\r\n    canvas = options.canvas || document.createElement('canvas');\r\n    canvas.id = 'trailCanvas';\r\n    canvas.style.position = 'fixed';\r\n    canvas.style.top = '0';\r\n    canvas.style.left = '0';\r\n    canvas.style.width = '100vw';\r\n    canvas.style.height = '100vh';\r\n    canvas.style.zIndex = options.zIndex || '9999';\r\n    canvas.style.pointerEvents = options.pointerEvents || 'none';\r\n    canvas.style.userSelect = 'none';\r\n    document.body.appendChild(canvas);\r\n    ctx = canvas.getContext('2d');\r\n    resizeCanvas();\r\n    addListeners();\r\n    animationId = requestAnimationFrame(animate);\r\n  }\r\n\r\n  function destroyNeonMouseEffect() {\r\n    if (animationId) cancelAnimationFrame(animationId);\r\n    removeListeners();\r\n    if (canvas && canvas.parentNode) {\r\n      canvas.parentNode.removeChild(canvas);\r\n      canvas = null;\r\n      ctx = null;\r\n    }\r\n    mouseTrail = [];\r\n    orbParticles = [];\r\n    lastMoveTime = 0;\r\n    Object.keys(mouseOrb).forEach(k => {\r\n      if (typeof mouseOrb[k] === 'number') mouseOrb[k] = 0;\r\n      else if (Array.isArray(mouseOrb[k])) mouseOrb[k] = [];\r\n      else mouseOrb[k] = null;\r\n    });\r\n  }\r\n\r\n  // Expose globally\r\n  global.initNeonMouseEffect = initNeonMouseEffect;\r\n  global.destroyNeonMouseEffect = destroyNeonMouseEffect;\r\n\r\n})(window);\r\n"],"names":["global","canvas","ctx","animationId","mouseTrail","orbParticles","lastMoveTime","ORB_PARTICLE_COUNT","mouseOrb","x","y","px","py","exploded","explodeTime","grow","squash","squashTimer","squashActive","bounce","bounceTime","reassembleTimestamps","reassembledParticles","afterglow","afterglowTime","getParticleGradientColor","lifeProgress","easeOutQuint","Math","pow","resizeCanvas","width","window","innerWidth","height","innerHeight","drawParticleTrail","p","trail","length","j","prev","curr","save","beginPath","moveTo","lineTo","age","alpha","strokeStyle","hue","shadowColor","shadowBlur","lineWidth","stroke","restore","cleanMouseTrail","now","t","shift","animate","globalCompositeOperation","clearRect","performance","reassembledCount","brightenTrail","brighten","i","pt1","pt2","max","min","baseAlpha","earlyHot","shadowAlpha","drawNeonMouseTrail","push","reentryDelay","random","particleExplodeElapsed","lifeRatio","vx","vy","returnStart","timeSinceReturn","dx","dy","dist","sqrt","swirlStrength","exp","swirlAngle","atan2","PI","swirlVx","cos","swirlVy","sin","baseForce","ax","ay","speedRamp","timeBoost","splice","justReassembled","baseR","flash","dx2","dy2","dist2","gradColor","setTimeout","radius","arc","fillStyle","globalAlpha","fill","slice","elapsedSinceFirst","particleFraction","linger","growTarget","squashProgress","orbHue","growVal","glowVal","fraction","bounceElapsed","getOrbGlowFactor","outerR","innerR","requestAnimationFrame","mousemoveHandler","e","clientX","clientY","mouseleaveHandler","mouseenterHandler","clickHandler","angle","speed","undefined","initNeonMouseEffect","options","document","createElement","id","style","position","top","left","zIndex","pointerEvents","userSelect","body","appendChild","getContext","addEventListener","destroyNeonMouseEffect","cancelAnimationFrame","removeEventListener","parentNode","removeChild","Object","keys","forEach","k","Array","isArray"],"mappings":"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"}